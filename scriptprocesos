-- Eliminamos la tabla audiences si existe
DROP TABLE IF EXISTS `Tbl_Audiences`;

-- Creamos la tabla Tbl_Audiences
CREATE TABLE `Tbl_Audiences` (
  `id_audience` INT NOT NULL AUTO_INCREMENT,
  `name_audience` VARCHAR(45) COLLATE utf8mb4_general_ci DEFAULT NULL,
  `course_id` INT NOT NULL,
  `status` TINYINT(1) DEFAULT 1, -- Estado de la audiencia: 1 (activo), 0 (inactivo)
  PRIMARY KEY (`id_audience`),
  KEY `course_id` (`course_id`),
  CONSTRAINT `audiences_ibfk_1` FOREIGN KEY (`course_id`) REFERENCES `courses` (`id_course`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

DELIMITER $$
CREATE PROCEDURE InsertAudience(
    IN p_name_audience VARCHAR(45),
    IN p_course_id INT
)
BEGIN
    INSERT INTO Tbl_Audiences (name_audience, course_id, status)
    VALUES (p_name_audience, p_course_id, 1);
END $$
DELIMITER ;

DELIMITER $$
CREATE PROCEDURE UpdateAudience(
    IN p_id_audience INT,
    IN p_name_audience VARCHAR(45),
    IN p_course_id INT,
    IN p_status TINYINT
)
BEGIN
    UPDATE Tbl_Audiences
    SET name_audience = p_name_audience,
        course_id = p_course_id,
        status = p_status
    WHERE id_audience = p_id_audience;
END $$
DELIMITER ;

DELIMITER $$
CREATE PROCEDURE GetAllAudiences()
BEGIN
    SELECT * FROM Tbl_Audiences
    WHERE status = 1;
END $$
DELIMITER ;

DELIMITER $$
CREATE PROCEDURE GetAudiencesByName(
    IN p_name_audience VARCHAR(45)
)
BEGIN
    SELECT * FROM Tbl_Audiences
    WHERE name_audience LIKE CONCAT('%', p_name_audience, '%') AND status = 1;
END $$
DELIMITER ;

DELIMITER $$
CREATE PROCEDURE DeleteAudience(
    IN p_id_audience INT
)
BEGIN
    UPDATE Tbl_Audiences
    SET status = 0 -- Cambiamos el estado a inactivo
    WHERE id_audience = p_id_audience;
END $$
DELIMITER ;
